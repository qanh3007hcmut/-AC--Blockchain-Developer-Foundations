/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MyStrictToken,
  MyStrictTokenInterface,
} from "../../contracts/MyStrictToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600d81526020017f4d79537472696374546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d535400000000000000000000000000000000000000000000000000000000008152508160039081620000909190620004ca565b508060049081620000a29190620004ca565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001119190620005f6565b60405180910390fd5b6200012b816200018a60201b60201c565b506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000613565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000313565b6200035e868362000313565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ab620003a56200039f8462000376565b62000380565b62000376565b9050919050565b6000819050919050565b620003c7836200038a565b620003df620003d682620003b2565b84845462000320565b825550505050565b600090565b620003f6620003e7565b62000403818484620003bc565b505050565b5b818110156200042b576200041f600082620003ec565b60018101905062000409565b5050565b601f8211156200047a576200044481620002ee565b6200044f8462000303565b810160208510156200045f578190505b620004776200046e8562000303565b83018262000408565b50505b505050565b600082821c905092915050565b60006200049f600019846008026200047f565b1980831691505092915050565b6000620004ba83836200048c565b9150826002028217905092915050565b620004d58262000250565b67ffffffffffffffff811115620004f157620004f06200025b565b5b620004fd8254620002b9565b6200050a8282856200042f565b600060209050601f8311600181146200054257600084156200052d578287015190505b620005398582620004ac565b865550620005a9565b601f1984166200055286620002ee565b60005b828110156200057c5784890151825560018201915060208501945060208101905062000555565b868310156200059c578489015162000598601f8916826200048c565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005de82620005b1565b9050919050565b620005f081620005d1565b82525050565b60006020820190506200060d6000830184620005e5565b92915050565b6120a280620006236000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad5780639e281a98116100715780639e281a98146102f8578063a9059cbb14610314578063dd62ed3e14610344578063e43252d714610374578063f2fde38b1461039057610121565b8063715018a6146102665780638ab1d681146102705780638da5cb5b1461028c57806395d89b41146102aa5780639b19251a146102c857610121565b8063313ce567116100f4578063313ce567146101c25780633af32abf146101e05780633ccfd60b1461021057806340c10f191461021a57806370a082311461023657610121565b806306fdde0314610126578063095ea7b31461014457806318160ddd1461017457806323b872dd14610192575b600080fd5b61012e6103ac565b60405161013b91906117fa565b60405180910390f35b61015e600480360381019061015991906118b5565b61043e565b60405161016b9190611910565b60405180910390f35b61017c610461565b604051610189919061193a565b60405180910390f35b6101ac60048036038101906101a79190611955565b61046b565b6040516101b99190611910565b60405180910390f35b6101ca61050d565b6040516101d791906119c4565b60405180910390f35b6101fa60048036038101906101f591906119df565b610516565b6040516102079190611910565b60405180910390f35b61021861056c565b005b610234600480360381019061022f91906118b5565b610662565b005b610250600480360381019061024b91906119df565b610735565b60405161025d919061193a565b60405180910390f35b61026e61077d565b005b61028a600480360381019061028591906119df565b610791565b005b6102946108c3565b6040516102a19190611a1b565b60405180910390f35b6102b26108ed565b6040516102bf91906117fa565b60405180910390f35b6102e260048036038101906102dd91906119df565b61097f565b6040516102ef9190611910565b60405180910390f35b610312600480360381019061030d91906118b5565b61099f565b005b61032e600480360381019061032991906118b5565b610c5b565b60405161033b9190611910565b60405180910390f35b61035e60048036038101906103599190611a36565b610cfb565b60405161036b919061193a565b60405180910390f35b61038e600480360381019061038991906119df565b610d82565b005b6103aa60048036038101906103a591906119df565b610f24565b005b6060600380546103bb90611aa5565b80601f01602080910402602001604051908101604052809291908181526020018280546103e790611aa5565b80156104345780601f1061040957610100808354040283529160200191610434565b820191906000526020600020905b81548152906001019060200180831161041757829003601f168201915b5050505050905090565b600080610449610faa565b9050610456818585610fb2565b600191505092915050565b6000600254905090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090611b22565b60405180910390fd5b610504848484610fc4565b90509392505050565b60006012905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610574610ff3565b6000479050600081116105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390611b8e565b60405180910390fd5b6105c46108c3565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610609573d6000803e3d6000fd5b506106126108c3565b73ffffffffffffffffffffffffffffffffffffffff167f8455ae6be5d92f1df1c3c1484388e247a36c7e60d72055ae216dbc258f257d4b82604051610657919061193a565b60405180910390a250565b61066a610ff3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d090611bfa565b60405180910390fd5b6106e3828261107a565b8173ffffffffffffffffffffffffffffffffffffffff167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427382604051610729919061193a565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610785610ff3565b61078f60006110fc565b565b610799610ff3565b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081c90611c66565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df75760405160405180910390a250565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108fc90611aa5565b80601f016020809104026020016040519081016040528092919081815260200182805461092890611aa5565b80156109755780601f1061094a57610100808354040283529160200191610975565b820191906000526020600020905b81548152906001019060200180831161095857829003601f168201915b5050505050905090565b60066020528060005260406000206000915054906101000a900460ff1681565b6109a7610ff3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90611cd2565b60405180910390fd5b60008111610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090611d3e565b60405180910390fd5b600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a999190611a1b565b602060405180830381865afa158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190611d73565b905082811015610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1690611dec565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610b456108c3565b866040518363ffffffff1660e01b8152600401610b63929190611e0c565b6020604051808303816000875af1158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190611e61565b905080610be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdf90611eda565b60405180910390fd5b610bf06108c3565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f6337ed398c0e8467698c581374fdce4db14922df487b5a39483079f5f59b60a486604051610c4c919061193a565b60405180910390a35050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ce9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce090611b22565b60405180910390fd5b610cf383836111c2565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d8a610ff3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df090611f46565b60405180910390fd5b600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d90611fb2565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab0360405160405180910390a250565b610f2c610ff3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f9e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f959190611a1b565b60405180910390fd5b610fa7816110fc565b50565b600033905090565b610fbf83838360016111e5565b505050565b600080610fcf610faa565b9050610fdc8582856113bc565b610fe7858585611451565b60019150509392505050565b610ffb610faa565b73ffffffffffffffffffffffffffffffffffffffff166110196108c3565b73ffffffffffffffffffffffffffffffffffffffff16146110785761103c610faa565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161106f9190611a1b565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ec5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110e39190611a1b565b60405180910390fd5b6110f860008383611545565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806111cd610faa565b90506111da818585611451565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112575760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161124e9190611a1b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112c95760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c09190611a1b565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156113b6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113ad919061193a565b60405180910390a35b50505050565b60006113c88484610cfb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561144b578181101561143b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161143293929190611fd2565b60405180910390fd5b61144a848484840360006111e5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114c35760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114ba9190611a1b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115355760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161152c9190611a1b565b60405180910390fd5b611540838383611545565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361159757806002600082825461158b9190612038565b9250508190555061166a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611623578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161161a93929190611fd2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116b35780600260008282540392505081905550611700565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161175d919061193a565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117a4578082015181840152602081019050611789565b60008484015250505050565b6000601f19601f8301169050919050565b60006117cc8261176a565b6117d68185611775565b93506117e6818560208601611786565b6117ef816117b0565b840191505092915050565b6000602082019050818103600083015261181481846117c1565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061184c82611821565b9050919050565b61185c81611841565b811461186757600080fd5b50565b60008135905061187981611853565b92915050565b6000819050919050565b6118928161187f565b811461189d57600080fd5b50565b6000813590506118af81611889565b92915050565b600080604083850312156118cc576118cb61181c565b5b60006118da8582860161186a565b92505060206118eb858286016118a0565b9150509250929050565b60008115159050919050565b61190a816118f5565b82525050565b60006020820190506119256000830184611901565b92915050565b6119348161187f565b82525050565b600060208201905061194f600083018461192b565b92915050565b60008060006060848603121561196e5761196d61181c565b5b600061197c8682870161186a565b935050602061198d8682870161186a565b925050604061199e868287016118a0565b9150509250925092565b600060ff82169050919050565b6119be816119a8565b82525050565b60006020820190506119d960008301846119b5565b92915050565b6000602082840312156119f5576119f461181c565b5b6000611a038482850161186a565b91505092915050565b611a1581611841565b82525050565b6000602082019050611a306000830184611a0c565b92915050565b60008060408385031215611a4d57611a4c61181c565b5b6000611a5b8582860161186a565b9250506020611a6c8582860161186a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611abd57607f821691505b602082108103611ad057611acf611a76565b5b50919050565b7f4e6f742077686974656c69737465640000000000000000000000000000000000600082015250565b6000611b0c600f83611775565b9150611b1782611ad6565b602082019050919050565b60006020820190508181036000830152611b3b81611aff565b9050919050565b7f4e6f2045544820746f2077697468647261770000000000000000000000000000600082015250565b6000611b78601283611775565b9150611b8382611b42565b602082019050919050565b60006020820190508181036000830152611ba781611b6b565b9050919050565b7f43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000600082015250565b6000611be4601b83611775565b9150611bef82611bae565b602082019050919050565b60006020820190508181036000830152611c1381611bd7565b9050919050565b7f41646472657373206e6f742077686974656c6973746564000000000000000000600082015250565b6000611c50601783611775565b9150611c5b82611c1a565b602082019050919050565b60006020820190508181036000830152611c7f81611c43565b9050919050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b6000611cbc601583611775565b9150611cc782611c86565b602082019050919050565b60006020820190508181036000830152611ceb81611caf565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b6000611d28602083611775565b9150611d3382611cf2565b602082019050919050565b60006020820190508181036000830152611d5781611d1b565b9050919050565b600081519050611d6d81611889565b92915050565b600060208284031215611d8957611d8861181c565b5b6000611d9784828501611d5e565b91505092915050565b7f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000600082015250565b6000611dd6601a83611775565b9150611de182611da0565b602082019050919050565b60006020820190508181036000830152611e0581611dc9565b9050919050565b6000604082019050611e216000830185611a0c565b611e2e602083018461192b565b9392505050565b611e3e816118f5565b8114611e4957600080fd5b50565b600081519050611e5b81611e35565b92915050565b600060208284031215611e7757611e7661181c565b5b6000611e8584828501611e4c565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000611ec4601583611775565b9150611ecf82611e8e565b602082019050919050565b60006020820190508181036000830152611ef381611eb7565b9050919050565b7f43616e6e6f742077686974656c697374207a65726f2061646472657373000000600082015250565b6000611f30601d83611775565b9150611f3b82611efa565b602082019050919050565b60006020820190508181036000830152611f5f81611f23565b9050919050565b7f4164647265737320616c72656164792077686974656c69737465640000000000600082015250565b6000611f9c601b83611775565b9150611fa782611f66565b602082019050919050565b60006020820190508181036000830152611fcb81611f8f565b9050919050565b6000606082019050611fe76000830186611a0c565b611ff4602083018561192b565b612001604083018461192b565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120438261187f565b915061204e8361187f565b925082820190508082111561206657612065612009565b5b9291505056fea2646970667358221220836a7118db2c7f5e5f3837537a3f7a13cf0569d719de623d84c4f0aea25a1d5964736f6c63430008140033";

type MyStrictTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyStrictTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyStrictToken__factory extends ContractFactory {
  constructor(...args: MyStrictTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyStrictToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyStrictToken__factory {
    return super.connect(runner) as MyStrictToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyStrictTokenInterface {
    return new Interface(_abi) as MyStrictTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MyStrictToken {
    return new Contract(address, _abi, runner) as unknown as MyStrictToken;
  }
}
