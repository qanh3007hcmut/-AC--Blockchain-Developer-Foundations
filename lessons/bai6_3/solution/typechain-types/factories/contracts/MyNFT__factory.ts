/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyNFT, MyNFTInterface } from "../../contracts/MyNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336040518060400160405280600581526020017f4d794e46540000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250816000908161008d9190610445565b50806001908161009d9190610445565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101125760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101099190610558565b60405180910390fd5b6101218161012f60201b60201c565b506000600781905550610573565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061027657607f821691505b6020821081036102895761028861022f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102b4565b6102fb86836102b4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061034261033d61033884610313565b61031d565b610313565b9050919050565b6000819050919050565b61035c83610327565b61037061036882610349565b8484546102c1565b825550505050565b600090565b610385610378565b610390818484610353565b505050565b5b818110156103b4576103a960008261037d565b600181019050610396565b5050565b601f8211156103f9576103ca8161028f565b6103d3846102a4565b810160208510156103e2578190505b6103f66103ee856102a4565b830182610395565b50505b505050565b600082821c905092915050565b600061041c600019846008026103fe565b1980831691505092915050565b6000610435838361040b565b9150826002028217905092915050565b61044e826101f5565b67ffffffffffffffff81111561046757610466610200565b5b610471825461025e565b61047c8282856103b8565b600060209050601f8311600181146104af576000841561049d578287015190505b6104a78582610429565b86555061050f565b601f1984166104bd8661028f565b60005b828110156104e5578489015182556001820191506020850194506020810190506104c0565b8683101561050257848901516104fe601f89168261040b565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054282610517565b9050919050565b61055281610537565b82525050565b600060208201905061056d6000830184610549565b92915050565b61213b806105826000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a22cb46511610071578063a22cb465146102cd578063b88d4fde146102e9578063c87b56dd14610305578063e985e9c514610335578063f2fde38b1461036557610116565b8063715018a61461026957806375794a3c146102735780638da5cb5b1461029157806395d89b41146102af57610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780636352211e146101ed5780636a6278421461021d57806370a082311461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b6101356004803603810190610130919061190e565b610381565b6040516101429190611956565b60405180910390f35b610153610463565b6040516101609190611a01565b60405180910390f35b610183600480360381019061017e9190611a59565b6104f5565b6040516101909190611ac7565b60405180910390f35b6101b360048036038101906101ae9190611b0e565b610511565b005b6101cf60048036038101906101ca9190611b4e565b610527565b005b6101eb60048036038101906101e69190611b4e565b610629565b005b61020760048036038101906102029190611a59565b610649565b6040516102149190611ac7565b60405180910390f35b61023760048036038101906102329190611ba1565b61065b565b005b610253600480360381019061024e9190611ba1565b61068a565b6040516102609190611bdd565b60405180910390f35b610271610744565b005b61027b610758565b6040516102889190611bdd565b60405180910390f35b61029961075e565b6040516102a69190611ac7565b60405180910390f35b6102b7610788565b6040516102c49190611a01565b60405180910390f35b6102e760048036038101906102e29190611c24565b61081a565b005b61030360048036038101906102fe9190611d99565b610830565b005b61031f600480360381019061031a9190611a59565b610855565b60405161032c9190611a01565b60405180910390f35b61034f600480360381019061034a9190611e1c565b6108be565b60405161035c9190611956565b60405180910390f35b61037f600480360381019061037a9190611ba1565b610952565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045c575061045b826109d8565b5b9050919050565b60606000805461047290611e8b565b80601f016020809104026020016040519081016040528092919081815260200182805461049e90611e8b565b80156104eb5780601f106104c0576101008083540402835291602001916104eb565b820191906000526020600020905b8154815290600101906020018083116104ce57829003601f168201915b5050505050905090565b600061050082610a42565b5061050a82610aca565b9050919050565b610523828261051e610b07565b610b0f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105995760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105909190611ac7565b60405180910390fd5b60006105ad83836105a8610b07565b610b21565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610623578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161061a93929190611ebc565b60405180910390fd5b50505050565b61064483838360405180602001604052806000815250610830565b505050565b600061065482610a42565b9050919050565b610663610d3b565b61066f81600754610dc2565b6007600081548092919061068290611f22565b919050555050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106fd5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106f49190611ac7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61074c610d3b565b6107566000610de0565b565b60075481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461079790611e8b565b80601f01602080910402602001604051908101604052809291908181526020018280546107c390611e8b565b80156108105780601f106107e557610100808354040283529160200191610810565b820191906000526020600020905b8154815290600101906020018083116107f357829003601f168201915b5050505050905090565b61082c610825610b07565b8383610ea6565b5050565b61083b848484610527565b61084f610846610b07565b85858585611015565b50505050565b606061086082610a42565b50600061086b6111c6565b9050600081511161088b57604051806020016040528060008152506108b6565b80610895846111dd565b6040516020016108a6929190611fa6565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61095a610d3b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109cc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c39190611ac7565b60405180910390fd5b6109d581610de0565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610a4e836112ab565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ab89190611bdd565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b1c83838360016112e8565b505050565b600080610b2d846112ab565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b6f57610b6e8184866114ad565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c0057610bb16000856000806112e8565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c83576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610d43610b07565b73ffffffffffffffffffffffffffffffffffffffff16610d6161075e565b73ffffffffffffffffffffffffffffffffffffffff1614610dc057610d84610b07565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610db79190611ac7565b60405180910390fd5b565b610ddc828260405180602001604052806000815250611571565b5050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f1757816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f0e9190611ac7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110089190611956565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156111bf578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611074949392919061201f565b6020604051808303816000875af19250505080156110b057506040513d601f19601f820116820180604052508101906110ad9190612080565b60015b611134573d80600081146110e0576040519150601f19603f3d011682016040523d82523d6000602084013e6110e5565b606091505b50600081510361112c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111239190611ac7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111bd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111b49190611ac7565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060600060016111ec84611595565b01905060008167ffffffffffffffff81111561120b5761120a611c6e565b5b6040519080825280601f01601f19166020018201604052801561123d5781602001600182028036833780820191505090505b509050600082602001820190505b6001156112a0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611294576112936120ad565b5b0494506000850361124b575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113215750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561145557600061133184610a42565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561139c57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113af57506113ad81846108be565b155b156113f157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113e89190611ac7565b60405180910390fd5b811561145357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114b88383836116e8565b61156c57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361152d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115249190611bdd565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115639291906120dc565b60405180910390fd5b505050565b61157b83836117a9565b611590611586610b07565b6000858585611015565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115f3577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115e9576115e86120ad565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611630576d04ee2d6d415b85acef81000000008381611626576116256120ad565b5b0492506020810190505b662386f26fc10000831061165f57662386f26fc100008381611655576116546120ad565b5b0492506010810190505b6305f5e1008310611688576305f5e100838161167e5761167d6120ad565b5b0492506008810190505b61271083106116ad5761271083816116a3576116a26120ad565b5b0492506004810190505b606483106116d057606483816116c6576116c56120ad565b5b0492506002810190505b600a83106116df576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117a057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611761575061176084846108be565b5b8061179f57508273ffffffffffffffffffffffffffffffffffffffff1661178783610aca565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361181b5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118129190611ac7565b60405180910390fd5b600061182983836000610b21565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461189d5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118949190611ac7565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118eb816118b6565b81146118f657600080fd5b50565b600081359050611908816118e2565b92915050565b600060208284031215611924576119236118ac565b5b6000611932848285016118f9565b91505092915050565b60008115159050919050565b6119508161193b565b82525050565b600060208201905061196b6000830184611947565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119ab578082015181840152602081019050611990565b60008484015250505050565b6000601f19601f8301169050919050565b60006119d382611971565b6119dd818561197c565b93506119ed81856020860161198d565b6119f6816119b7565b840191505092915050565b60006020820190508181036000830152611a1b81846119c8565b905092915050565b6000819050919050565b611a3681611a23565b8114611a4157600080fd5b50565b600081359050611a5381611a2d565b92915050565b600060208284031215611a6f57611a6e6118ac565b5b6000611a7d84828501611a44565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ab182611a86565b9050919050565b611ac181611aa6565b82525050565b6000602082019050611adc6000830184611ab8565b92915050565b611aeb81611aa6565b8114611af657600080fd5b50565b600081359050611b0881611ae2565b92915050565b60008060408385031215611b2557611b246118ac565b5b6000611b3385828601611af9565b9250506020611b4485828601611a44565b9150509250929050565b600080600060608486031215611b6757611b666118ac565b5b6000611b7586828701611af9565b9350506020611b8686828701611af9565b9250506040611b9786828701611a44565b9150509250925092565b600060208284031215611bb757611bb66118ac565b5b6000611bc584828501611af9565b91505092915050565b611bd781611a23565b82525050565b6000602082019050611bf26000830184611bce565b92915050565b611c018161193b565b8114611c0c57600080fd5b50565b600081359050611c1e81611bf8565b92915050565b60008060408385031215611c3b57611c3a6118ac565b5b6000611c4985828601611af9565b9250506020611c5a85828601611c0f565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ca6826119b7565b810181811067ffffffffffffffff82111715611cc557611cc4611c6e565b5b80604052505050565b6000611cd86118a2565b9050611ce48282611c9d565b919050565b600067ffffffffffffffff821115611d0457611d03611c6e565b5b611d0d826119b7565b9050602081019050919050565b82818337600083830152505050565b6000611d3c611d3784611ce9565b611cce565b905082815260208101848484011115611d5857611d57611c69565b5b611d63848285611d1a565b509392505050565b600082601f830112611d8057611d7f611c64565b5b8135611d90848260208601611d29565b91505092915050565b60008060008060808587031215611db357611db26118ac565b5b6000611dc187828801611af9565b9450506020611dd287828801611af9565b9350506040611de387828801611a44565b925050606085013567ffffffffffffffff811115611e0457611e036118b1565b5b611e1087828801611d6b565b91505092959194509250565b60008060408385031215611e3357611e326118ac565b5b6000611e4185828601611af9565b9250506020611e5285828601611af9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ea357607f821691505b602082108103611eb657611eb5611e5c565b5b50919050565b6000606082019050611ed16000830186611ab8565b611ede6020830185611bce565b611eeb6040830184611ab8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f2d82611a23565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f5f57611f5e611ef3565b5b600182019050919050565b600081905092915050565b6000611f8082611971565b611f8a8185611f6a565b9350611f9a81856020860161198d565b80840191505092915050565b6000611fb28285611f75565b9150611fbe8284611f75565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611ff182611fca565b611ffb8185611fd5565b935061200b81856020860161198d565b612014816119b7565b840191505092915050565b60006080820190506120346000830187611ab8565b6120416020830186611ab8565b61204e6040830185611bce565b81810360608301526120608184611fe6565b905095945050505050565b60008151905061207a816118e2565b92915050565b600060208284031215612096576120956118ac565b5b60006120a48482850161206b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506120f16000830185611ab8565b6120fe6020830184611bce565b939250505056fea26469706673582212200c83e31926aad195407c582e0701c2410340514a6f469f681aaba26c9ffe3e7064736f6c634300081c0033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}
